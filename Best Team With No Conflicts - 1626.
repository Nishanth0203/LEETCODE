class Solution {
public:
    int bestTeamScore(vector<int>& scores, vector<int>& ages) {
        int n=scores.size();
        int ans=0, dp[n];
        vector<pair<int,int>>array;
        for(int i=0;i<n;i++) {
            array.push_back({ages[i],scores[i]});
        }
        sort(array.begin(), array.end());
        for(int i=0;i<n;i++) {
            dp[i] = array[i].second;
            for(int j=0; j<i; j++) {
                if(array[j].second <= array[i].second)
                    dp[i] = max(dp[i], dp[j] + array[i].second);
            }
            ans= max(ans, dp[i]);
        }
        return ans;
    }
};

Time Complexity - O(N^2)
space Complexity - O(n)
