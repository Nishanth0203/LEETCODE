class Solution {
public:
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        vector<int> sub;
        vector<vector<int>> res;
        dfs(0,sub,res,nums);
        return res;
    }
    void dfs(int ind,vector<int>& sub,vector<vector<int>>& res,vector<int>& nums)
    {
        if(sub.size()>1)
        res.push_back(sub);
        unordered_set<int> s;
        for(int i=ind;i<nums.size();i++)
        {
            if((!sub.empty() && sub.back()>nums[i]) || (s.find(nums[i])!=s.end())) 
            continue;
            sub.push_back(nums[i]);
            dfs(i+1,sub,res,nums);
            sub.pop_back();
            s.insert(nums[i]);
        }
    }
};
